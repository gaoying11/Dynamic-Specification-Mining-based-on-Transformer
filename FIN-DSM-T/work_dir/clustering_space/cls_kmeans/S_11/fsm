digraph Automata {
rankdir=LR
size="8,5"
	node [shape=star]
	C2
	node [shape=doublecircle]
	CEND
	node [shape=circle]
	C6 -> C3 [label="remove:TRUE"]
	C7 -> C5 [label=size]
	C3 -> C3 [label=toArray]
	C0 -> C0 [label=toArray]
	C7 -> C7 [label="addAll:TRUE"]
	C1 -> C8 [label=indexOf]
	C0 -> C5 [label="addAll:FALSE"]
	C5 -> C5 [label="add:TRUE"]
	C6 -> C5 [label=size]
	C10 -> C9 [label="add:TRUE"]
	C1 -> C8 [label="addAll:TRUE"]
	C8 -> C5 [label="addAll:FALSE"]
	C6 -> C6 [label=toArray]
	C5 -> C3 [label=size]
	C0 -> C0 [label="addAll:FALSE"]
	C0 -> C0 [label="isEmpty:FALSE"]
	C7 -> C8 [label="isEmpty:FALSE"]
	C1 -> C8 [label=toArray]
	C0 -> C3 [label="add:TRUE"]
	C9 -> C9 [label="addAll:TRUE"]
	C7 -> C7 [label=set]
	C7 -> C8 [label="addAll:TRUE"]
	C7 -> C7 [label="isEmpty:TRUE"]
	C0 -> CEND [label=<END>]
	C5 -> C5 [label=set]
	C5 -> C3 [label="isEmpty:FALSE"]
	C7 -> C7 [label="remove:TRUE"]
	C5 -> C5 [label="remove:TRUE"]
	C0 -> C0 [label=indexOf]
	C7 -> C8 [label=clear]
	C9 -> C9 [label=clear]
	C1 -> C8 [label="isEmpty:TRUE"]
	C6 -> C3 [label=size]
	CSTART -> C10 [label=ArrayList]
	C5 -> C5 [label=add]
	C1 -> C8 [label="isEmpty:FALSE"]
	C0 -> C0 [label=size]
	C7 -> C7 [label=remove]
	C9 -> CEND [label=<END>]
	C5 -> C5 [label=remove]
	C6 -> C6 [label="isEmpty:TRUE"]
	C5 -> CEND [label=<END>]
	CSTART -> C1 [label=ArrayList]
	C0 -> C5 [label=size]
	C1 -> C1 [label="addAll:FALSE"]
	C9 -> C9 [label="remove:FALSE"]
	C7 -> C7 [label="addAll:FALSE"]
	C7 -> C8 [label="remove:FALSE"]
	C5 -> C5 [label="addAll:FALSE"]
	C1 -> CEND [label=<END>]
	C1 -> C1 [label=size]
	C10 -> C5 [label=toArray]
	C7 -> C7 [label=toArray]
	C5 -> C5 [label=toArray]
	C10 -> C1 [label="isEmpty:TRUE"]
	C6 -> C6 [label=add]
	C5 -> C3 [label="remove:TRUE"]
	C3 -> C5 [label=toArray]
	C6 -> C6 [label=set]
	C6 -> C6 [label=remove]
	C5 -> C3 [label=add]
	C5 -> C8 [label=clear]
	C1 -> C8 [label=clear]
	C1 -> C1 [label="isEmpty:TRUE"]
	C5 -> C5 [label=size]
	C2 -> CSTART [label=<START>]
	C0 -> C0 [label=add]
	C6 -> C6 [label=indexOf]
	C0 -> C0 [label=set]
	C6 -> C3 [label=remove]
	C5 -> C8 [label="addAll:FALSE"]
	C1 -> C8 [label="addAll:FALSE"]
	C7 -> C7 [label=clear]
	C5 -> C5 [label=clear]
	C0 -> C0 [label="remove:TRUE"]
	C1 -> C9 [label="add:TRUE"]
	C5 -> C3 [label=indexOf]
	C6 -> C3 [label=toArray]
	C9 -> C8 [label="isEmpty:TRUE"]
	C7 -> CEND [label=<END>]
	C5 -> C0 [label=set]
	C1 -> C1 [label=clear]
	C8 -> CEND [label=<END>]
	C1 -> C8 [label=size]
	C5 -> C0 [label=add]
	C5 -> C3 [label="add:TRUE"]
	C7 -> C6 [label="add:TRUE"]
	C7 -> C8 [label="addAll:FALSE"]
	C9 -> C5 [label=toArray]
	C1 -> C1 [label="remove:FALSE"]
	C9 -> C9 [label="isEmpty:FALSE"]
	C6 -> C3 [label=get]
	C1 -> C7 [label=toArray]
	C9 -> C9 [label=clone]
	C9 -> C9 [label=size]
	C9 -> C9 [label="addAll:FALSE"]
	C9 -> C9 [label="add:TRUE"]
	C0 -> C0 [label="addAll:TRUE"]
	C1 -> C1 [label=indexOf]
	C0 -> C0 [label="remove:FALSE"]
	C3 -> C3 [label="remove:FALSE"]
	C7 -> C8 [label=size]
	C6 -> C6 [label=get]
	C5 -> C5 [label=get]
	C6 -> C6 [label=clear]
	C1 -> C1 [label="addAll:TRUE"]
	C0 -> C0 [label=clear]
	C9 -> C6 [label=toArray]
	C6 -> C3 [label="addAll:TRUE"]
	C1 -> C8 [label="remove:FALSE"]
	C0 -> C0 [label=get]
	C5 -> C5 [label=indexOf]
	C3 -> CEND [label=<END>]
	C6 -> C3 [label=indexOf]
	C10 -> C7 [label=toArray]
	C10 -> C10 [label=size]
	C5 -> C5 [label="remove:FALSE"]
	C9 -> C9 [label="remove:TRUE"]
	C0 -> C0 [label=remove]
	C7 -> C0 [label=add]
	C7 -> C3 [label="add:TRUE"]
}
